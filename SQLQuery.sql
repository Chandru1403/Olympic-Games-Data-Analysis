USE OLYMPICS;




SELECT *
FROM ATHLETE;

SELECT *
FROM NOC_REGIONS;

-- REMOVING DUPLICATE VALUES

WITH DUP AS (
          SELECT 
               ROW_NUMBER() OVER (PARTITION BY ID,NAME,SEX,AGE,HEIGHT,WEIGHT,TEAM,NOC,GAMES,YEAR,SEASON,CITY,SPORT,EVENT,MEDAL
                ORDER BY ID) AS NO , 
             ATHLETE.*
FROM ATHLETE
) 

DELETE FROM ATHLETE
WHERE ID IN ( SELECT 
                    ID 
               FROM  DUP 
			  WHERE NO > 1);

 -- 1. HOW MANY TOTAL OLYMPIC GAMES HELD (INCLUDING SUMMER AND WINTER).
 
 SELECT 
         COUNT(DISTINCT(GAMES)) AS TOTAL_GAMES
FROM ATHLETE;
            
			
 -- 2 LIST DOWN ALL OLYMPICS GAMES HELD SO FAR.

SELECT 
        DISTINCT YEAR,
		SEASON,
		CITY
FROM ATHLETE
ORDER BY YEAR ASC;

--3. TOTAL NO. OF COUNTRIES PARTICIPATED IN EACH SUMMER/WINTER OLYMPICS.

SELECT 
      GAMES,
	  COUNT(DISTINCT NOC) AS TOTAL_COUNTRIES 
FROM ATHLETE
GROUP BY GAMES
ORDER BY GAMES ASC;



						
--4. WHICH YEAR SAW THE HIGHEST  NO OF COUNTRIES PARTICIPATING IN OLYMPICS?

SELECT 
      TOP 1 GAMES,
	  COUNT(DISTINCT NOC) AS HIGHEST_TEAM 
FROM ATHLETE
GROUP BY GAMES
ORDER BY HIGHEST_TEAM DESC ;

--5. WHICH YEAR SAW THE  LOWEST NO OF COUNTRIES PARTICIPATING IN OLYMPICS?

SELECT 
       TOP 1 GAMES,
	   COUNT(DISTINCT NOC) AS LOWEST_TEAM 
FROM ATHLETE 
GROUP BY GAMES
ORDER BY LOWEST_TEAM ASC ;

-- 6 WHICH NATION HAS PARTICIPATED IN ALL OF THE OLYMPIC GAMES?

SELECT 
       A.NOC,
	   N.REGION,
	   COUNT(DISTINCT GAMES) AS TOTAL_GAMES  
FROM ATHLETE A
JOIN NOC_REGIONS N ON A.NOC = N.NOC
GROUP BY A.NOC,N.REGION
HAVING COUNT( DISTINCT GAMES) = (SELECT COUNT(DISTINCT GAMES) FROM ATHLETE);

-- 7. IDENTIFY THE SPORT WHICH WAS PLAYED IN ALL SUMMER OLYMPICS

SELECT  
     SPORT,
	 COUNT(DISTINCT GAMES) 
FROM ATHLETE
WHERE SEASON = 'SUMMER'
GROUP BY SPORT
HAVING COUNT(DISTINCT GAMES) = (SELECT COUNT(DISTINCT GAMES) FROM ATHLETE
                               WHERE SEASON = 'SUMMER');

-- 8.WHICH SPORTS WERE JUST PLAYED ONLY ONCE AND WHICH YEAR IN THE OLYMPICS?

WITH A AS 
( SELECT 
        C.SPORT 
FROM (
        SELECT SPORT,COUNT(DISTINCT GAMES) AS TOTAL_PLAYED FROM ATHLETE
        GROUP BY SPORT
        HAVING COUNT(DISTINCT GAMES) = 1) AS C
),

B AS (
SELECT SPORT,GAMES FROM ATHLETE
)

SELECT DISTINCT A.SPORT,B.GAMES FROM A
LEFT JOIN B
ON A.SPORT = B.SPORT;
;


-- 9. FETCH DETAILS OF THE OLDEST ATHLETES TO WIN A GOLD MEDAL.

SELECT 
       TOP 10 NAME,
	   SEX,
	   AGE,TEAM,
	   GAMES,SEASON,
	   SPORT,EVENT,
	   MEDAL
FROM ATHLETE
WHERE MEDAL = 'Gold'
ORDER BY AGE DESC;

-- 10. FETCH THE TOP 5 ATHLETES WHO HAVE WON THE MOST GOLD MEDALS

SELECT  
     TOP 5 NAME,
	 COUNT(MEDAL) AS TOTAL_GOLD 
FROM ATHLETE
WHERE MEDAL = 'GOLD'
GROUP BY NAME
ORDER BY COUNT(MEDAL) DESC ;

-- 11. FETCH THE TOP 5 ATHLETES WHO HAVE WON THE MOST MEDALS (GOLD/SILVER/BRON
SELECT TOP 5 NAME,TEAM,SUM( CASE WHEN MEDAL = 'SILVER' THEN 1 ELSE 0 END) AS SILVER,
            SUM( CASE WHEN MEDAL = 'GOLD' THEN 1 ELSE 0 END) AS GOLD,
			SUM( CASE WHEN MEDAL = 'BRONZE' THEN 1 ELSE 0 END) AS BRONZE,
            SUM( CASE WHEN MEDAL IN ('BRONZE','GOLD','SILVER') THEN 1 ELSE 0 END) AS TOTAL_MEDAL
			FROM ATHLETE
GROUP BY NAME,TEAM
ORDER BY TOTAL_MEDAL DESC ;

-- 12 FETCH THE TOP 5 MOST SUCCESSFUL COUNTRIES IN OLYMPICS. SUCCESS IS DEFINED BY NO OF MEDALS WON.

SELECT TOP 5 REGION,
        SUM(CASE WHEN MEDAL= 'GOLD' THEN 1 ELSE 0 END) AS GOLD_MEDAL,
        SUM(CASE WHEN MEDAL = 'SILVER' THEN 1 ELSE 0 END) AS SILVER_MEDAL,
        SUM(CASE WHEN MEDAL = 'BRONZE' THEN 1 ELSE 0 END) AS BRONZE_MEDAL,
        SUM(CASE WHEN MEDAL IN ('GOLD','SILVER','BRONZE') THEN 1 ELSE 0 END) AS TOTAL_MEDAL

FROM ATHLETE A
JOIN NOC_REGIONS N ON A.NOC = N.NOC
GROUP BY REGION
ORDER BY TOTAL_MEDAL DESC;

-- 13 LIST DOWN TOTAL GOLD, SILVER AND BROZE MEDALS WON BY EACH COUNNTRY CORRESPONDING TO EACH OLYMPIC GAMES.

SELECT 
        A.NOC,
		A.GAMES,
		N.REGION ,
		SUM(CASE WHEN MEDAL = 'GOLD' THEN 1 ELSE 0 END) AS GOLD ,
        SUM(CASE WHEN MEDAL = 'SILVER' THEN 1 ELSE 0 END)AS SILVER,
		SUM(CASE WHEN MEDAL = 'BRONZE' THEN 1 ELSE 0 END) AS BRONZE,
		SUM(CASE WHEN MEDAL IN ('GOLD','SILVER','BRONZE') THEN 1 ELSE 0 END) AS TOTAL_MEDAL FROM ATHLETE AS A
INNER JOIN NOC_REGIONS AS N ON A.NOC = N.NOC
GROUP BY A.NOC,A.GAMES,N.REGION
ORDER BY GAMES ASC ;

-- 14 WHICH COUNTRIES HAVE NEVER WON GOLD MEDAL BUT HAVE WON SILVER/BRONZE MEDALS?

WITH TOTAL_MEDALS AS 
(
   SELECT A.NOC,
          N.REGION ,
		  SUM(CASE WHEN MEDAL = 'GOLD' THEN 1 ELSE 0 END) AS GOLD ,
          SUM(CASE WHEN MEDAL = 'SILVER' THEN 1 ELSE 0 END)AS SILVER,
		  SUM(CASE WHEN MEDAL = 'BRONZE' THEN 1 ELSE 0 END) AS BRONZE,
		  SUM(CASE WHEN MEDAL IN ('GOLD','SILVER','BRONZE') THEN 1 ELSE 0 END) AS TOTAL_MEDAL FROM ATHLETE AS A
INNER JOIN NOC_REGIONS AS N ON A.NOC = N.NOC
GROUP BY A.NOC,N.REGION
) 
SELECT REGION, GOLD ,SILVER,BRONZE FROM TOTAL_MEDALS
WHERE GOLD = 0 AND (SILVER > 0 OR BRONZE >0) 
ORDER BY SILVER DESC,BRONZE DESC;

-- 15 IN WHICH SPORT/EVENT, INDIA HAS WON HIGHEST MEDALS.

SELECT 
     TOP 5 A.NOC,
	 B.REGION,
	 A.SPORT,
	 A.EVENT ,
	 COUNT(A.MEDAL) AS TOTAL_MEDAL 
FROM ATHLETE AS A
INNER JOIN NOC_REGIONS AS B ON A.NOC = B.NOC
WHERE A.MEDAL IN ('GOLD','SILVER','BRONZE') AND B.REGION = 'INDIA'
GROUP BY A.NOC,B.REGION,A.SPORT,A.EVENT 
ORDER BY TOTAL_MEDAL DESC ;

-- 16 BREAK DOWN ALL OLYMPIC GAMES WHERE INDIA WON MEDAL FOR HOCKEY AND HOW MANY MEDALS IN EACH OLYMPIC GAMES.
SELECT 
      A.NOC,
	  N.REGION,
	  A.GAMES,
	  A.EVENT,
	  SUM(CASE WHEN MEDAL IN ('GOLD','SILVER','BRONZE') THEN 1 ELSE 0 END) AS TOTAL_MEDAL 
FROM ATHLETE_EVENTS AS A
JOIN NOC_REGIONS AS N ON A.NOC = N.NOC
WHERE N.REGION = 'INDIA'  AND A.SPORT = 'HOCKEY'
GROUP BY A.NOC,N.REGION,A.GAMES,A.EVENT
HAVING SUM(CASE WHEN MEDAL IN ('GOLD','SILVER','BRONZE') THEN 1 ELSE 0 END) > 0
ORDER BY TOTAL_MEDAL DESC ;

-- 17 FETCH THE TOTAL NO. OF SPORTS PLAYED IN EACH OLYMPIC GAMES.

SELECT 
        DISTINCT GAMES,
		COUNT(DISTINCT SPORT) AS TOTAL_SPORTS 
FROM ATHLETE
GROUP BY GAMES
ORDER BY COUNT(DISTINCT SPORT) DESC;

-- 18  TOP COUNTRIES HAVE SENT FEWER THAN 50 ATHLETES BUT HAVE A HIGH RATIO OF MEDALS WON PER ATHLETE?
SELECT 
      TOP 10 REGION,
	  GAMES,
	  COUNT(DISTINCT NAME) AS TOTAL_PARTICIPANT ,
	  SUM(CASE WHEN MEDAL IN ('GOLD','SILVER','BRONZE') THEN 1 ELSE 0 END) AS TOTAL_MEDAL,
  ROUND(CAST(SUM(CASE WHEN MEDAL IN ('GOLD','SILVER','BRONZE') THEN 1 ELSE 0 END) AS FLOAT)/ COUNT(DISTINCT NAME),1) AS MEDAL_PER_ATHLETE FROM ATHLETE
 INNER JOIN 
          NOC_REGIONS ON ATHLETE.NOC =  NOC_REGIONS.NOC
 GROUP BY
        REGION,GAMES
 HAVING 
        COUNT(DISTINCT NAME) < 50
 ORDER BY 
        MEDAL_PER_ATHLETE DESC ;

-- 19 Country Dominance in Specific Sports:

CREATE PROCEDURE GAME 
         @SPORT_NAME VARCHAR(50) 
AS
BEGIN
     SELECT 
	       TOP 3 N.REGION,
		   A.SPORT,COUNT(A.MEDAL) AS TOTAL_MEDAL 
FROM ATHLETE AS A
INNER JOIN NOC_REGIONS AS N ON A.NOC = N.NOC
WHERE MEDAL IS NOT NULL AND  SPORT = @SPORT_NAME
GROUP BY REGION,SPORT
 ORDER BY TOTAL_MEDAL DESC;
END

SELECT DISTINCT SPORT FROM ATHLETE_EVENTS;
EXEC GAME @SPORT_NAME = 'FOOTBALL';
EXEC GAME @SPORT_NAME = 'HOCKEY';
EXEC GAME @SPORT_NAME = 'WEIGHTLIFTING';

-- 20 WHO IS THE MOST SUCCESSFUL ATHLETE (IN TERMS OF TOTAL MEDALS WON) IN EACH SPORT, 
-- AND HOW MANY MEDALS DID THEY WIN?

WITH A AS 
(
SELECT 
       NAME,
       SPORT, 
	   COUNT(MEDAL) AS TOTAL_MEDAL FROM ATHLETE_EVENTS
WHERE MEDAL IS NOT NULL 
GROUP BY NAME,SPORT
),
 RANKING AS (
          SELECT NAME,SPORT,TOTAL_MEDAL,RANK() OVER(PARTITION BY SPORT ORDER BY TOTAL_MEDAL DESC ) AS RANK FROM A
		  )
SELECT * FROM RANKING
WHERE RANK = 1 
ORDER BY TOTAL_MEDAL DESC;


-- 21 HOW MANY MEDALS DID EACH COUNTRY (NOC) WIN IN THE MOST RECENT OLYMPIC GAMES?
SELECT 
         N.REGION, 
		 COUNT(A.MEDAL) AS TOTAL_MEDALS
FROM ATHLETE_EVENTS AS A
INNER JOIN NOC_REGIONS AS N ON A.NOC = N.NOC
WHERE YEAR = (SELECT MAX(YEAR) FROM ATHLETE_EVENTS) AND MEDAL IS NOT NULL
GROUP BY REGION
ORDER BY TOTAL_MEDALS DESC;
